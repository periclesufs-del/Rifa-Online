import streamlit as st
import pandas as pd
import os

st.set_page_config(page_title="Rifa Solid√°ria", layout="centered")

st.title("Rifa Solid√°ria")
st.write("""
Ol√°, pessoal! Familiares e amigos est√£o unidos em uma corrente de solidariedade pela sa√∫de da nossa querida amiga Enfermeira Lane. Ela precisa com urg√™ncia realizar uma cirurgia de corre√ß√£o de f√≠stula liqu√≥rica na coluna tor√°cica, um procedimento essencial para sua recupera√ß√£o e qualidade de vida.
O custo total √© de R$ 106.000,00, valor que inclui honor√°rios m√©dicos (cirurgi√£o, anestesista, neuroestimula√ß√£o e demais custos hospitalares).
Para ajudar a tornar esse tratamento poss√≠vel, estamos organizando uma rifa solid√°ria, cuja renda contribuir√° de forma significativa para alcan√ßar essa meta. Sua participa√ß√£o faz toda a diferen√ßa! Cada gesto de apoio √© um passo importante rumo √† sa√∫de e ao bem-estar da nossa amiga Lane.
üíö
""")

# Adicione aqui os pr√™mios!
st.markdown("""
### Pr√™mios:
- 1¬∫ Pr√™mio: Smartphone Samsung A54
- 2¬∫ Pr√™mio: Voucher de R$ 500,00 em loja parceira
- 3¬∫ Pr√™mio: Caixa de som port√°til JBL
""")

arquivo_csv = "rifa_participantes.csv"

# Carrega dados existentes
if os.path.exists(arquivo_csv):
    df = pd.read_csv(arquivo_csv)
else:
    df = pd.DataFrame(columns=["Nome", "Contato", "Numero", "Status", "Comprovante"])

num_inicial = 1
num_final = 5000
todos_numeros = list(range(num_inicial, num_final+1))

ocupados = df[df["Status"] != "liberado"]["Numero"].astype(int).tolist() if not df.empty else []
disponiveis = [n for n in todos_numeros if n not in ocupados]

st.subheader("N√∫meros dispon√≠veis")
st.write(f"{len(disponiveis)} de {len(todos_numeros)} dispon√≠veis")

# Interface de escolha do n√∫mero
numero_escolhido = st.selectbox("Escolha um n√∫mero dispon√≠vel:", disponiveis)
nome = st.text_input("Seu nome completo")
contato = st.text_input("Telefone para contato (WhatsApp)")
comprovante = st.file_uploader("Envie seu comprovante de pagamento (opcional, PDF ou imagem)", type=["pdf", "jpg", "jpeg", "png"])

if st.button("Reservar n√∫mero"):
    if nome.strip() == "" or contato.strip() == "":
        st.warning("Preencha todos os campos!")
    elif numero_escolhido in ocupados:
        st.error("N√∫mero j√° reservado. Atualize a p√°gina e tente novamente.")
    else:
        if comprovante:
            filepath = f"comprovantes/{numero_escolhido}_{nome.strip().replace(' ', '_')}{os.path.splitext(comprovante.name)[1]}"
            os.makedirs("comprovantes", exist_ok=True)
            with open(filepath, "wb") as f:
                f.write(comprovante.getbuffer())
            comp_path = filepath
        else:
            comp_path = ""
        nova_linha = pd.DataFrame([[nome.strip(), contato.strip(), numero_escolhido, "pendente", comp_path]],
                                  columns=["Nome", "Contato", "Numero", "Status", "Comprovante"])
        df = pd.concat([df, nova_linha], ignore_index=True)
        df.to_csv(arquivo_csv, index=False)
        st.success(f"Pronto, {nome}! Seu n√∫mero {numero_escolhido} foi reservado. Status: pendente.")

# Exibi√ß√£o e gerenciamento dos participantes
if st.checkbox("Mostrar todos os participantes"):
    st.dataframe(df)
    st.write("Clique em um n√∫mero para liberar! Marque como 'pago' para validar.")

    # Gerenciamento manual pelo organizador
    numero_gerenciar = st.number_input("Digite o n√∫mero para liberar/cancelar", min_value=num_inicial, max_value=num_final, step=1)
    acao = st.selectbox("Selecione a√ß√£o", ["Liberar n√∫mero (cancelar reserva)", "Marcar como pago"])
    if st.button("Aplicar a√ß√£o"):
        idx = df[df["Numero"].astype(int) == int(numero_gerenciar)].index
        if len(idx) == 0:
            st.warning("N√∫mero n√£o encontrado ou sem reserva ativa.")
        else:
            if acao == "Liberar n√∫mero (cancelar reserva)":
                df.loc[idx, "Status"] = "liberado"
                st.info(f"N√∫mero {numero_gerenciar} foi liberado e est√° dispon√≠vel novamente.")
            elif acao == "Marcar como pago":
                df.loc[idx, "Status"] = "pago"
                st.success(f"N√∫mero {numero_gerenciar} foi marcado como pago.")
            df.to_csv(arquivo_csv, index=False)

# Exporta√ß√£o dos inscritos
if st.button("Exportar lista (CSV)"):
    df.to_csv(arquivo_csv, index=False)
    st.success("Arquivo atualizado/exportado com sucesso.")

st.info("Ao reservar seu n√∫mero, confirme pagamento pelo n√∫mero (97) 984033561. Envie seu comprovante para facilitar a confirma√ß√£o. Ap√≥s verifica√ß√£o, seu n√∫mero ser√° validado!")
